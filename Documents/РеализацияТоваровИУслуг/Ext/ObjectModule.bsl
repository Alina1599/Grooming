#Область ОбработчикиСобытий
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаписьКлиента") Тогда 
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		Клиент = ДанныеЗаполнения.Клиент;
		Комментарий = ДанныеЗаполнения.Комментарий;
		Сотрудник = ДанныеЗаполнения.Сотрудник;
		
		Для Каждого ТекСтрокаУслуги Из ДанныеЗаполнения.Услуги Цикл
			НоваяСтрока = Услуги.Добавить();
			НоваяСтрока.Стоимость = ТекСтрокаУслуги.Стоимость;
			НоваяСтрока.Номенклатура = ТекСтрокаУслуги.Услуга;
		КонецЦикла; 
	КонецЕсли; 	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения) 
	СуммаДокумента = Услуги.Итог("Стоимость") + Товары.Итог("Сумма"); 
	Если ЗначениеЗаполнено(Ссылка)
		И ПризнакОплаты <> Перечисления.ОплатаДокумента.ПолностьюОплачен Тогда
		СтруктураОплаты = Документы.РеализацияТоваровИУслуг.ПроверитьОплатуДокумента(Ссылка);
		ПризнакОплаты = СтруктураОплаты.ПризнакОплаты;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)  	
	Движения.ТоварыНаСкладах.Записывать = Истина;
	Движения.ЗаказыКлиентов.Записывать = Истина; 
	Движения.Продажи.Записывать = Истина;         
	Движения.УчетЗатрат.Записывать = Истина;
	Движения.Хозрасчетный.Записывать = Истина;
	
	Движения.ТоварыНаСкладах.Записать();
	Движения.Продажи.Записать();
	Движения.УчетЗатрат.Записать();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыНаСкладах");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = Товары;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	
	Блокировка.Заблокировать();       
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ
	|	РеализацияТоваровИУслугТовары.Номенклатура КАК Номенклатура,
	|	СУММА(РеализацияТоваровИУслугТовары.Количество) КАК Количество,
	|	СУММА(РеализацияТоваровИУслугТовары.Сумма) КАК Сумма,
	|	РеализацияТоваровИУслугТовары.Ссылка.Склад КАК Склад
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	Документ.РеализацияТоваровИУслуг.Товары КАК РеализацияТоваровИУслугТовары
	|ГДЕ
	|	РеализацияТоваровИУслугТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровИУслугТовары.Номенклатура,
	|	РеализацияТоваровИУслугТовары.Ссылка.Склад
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияТоваровИУслугУслуги.Номенклатура,
	|	1,
	|	СУММА(РеализацияТоваровИУслугУслуги.Стоимость),
	|	РеализацияТоваровИУслугУслуги.Ссылка.Склад
	|ИЗ
	|	Документ.РеализацияТоваровИУслуг.Услуги КАК РеализацияТоваровИУслугУслуги
	|ГДЕ
	|	РеализацияТоваровИУслугУслуги.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровИУслугУслуги.Номенклатура,
	|	РеализацияТоваровИУслугУслуги.Ссылка.Склад
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Товары.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ВТ_Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоТовар,
	|	ВТ_Товары.Номенклатура.Представление КАК НоменклатураПредставление,
	|	ВТ_Товары.Количество КАК КоличествоВДокументе,
	|	ВТ_Товары.Сумма КАК СуммаВДокументе,
	|	ТоварыНаСкладахОстатки.СрокГодности КАК СрокГодности,
	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
	|	ВТ_Товары.Номенклатура.СтатьяЗатрат КАК СтатьяЗатрат,
	|	ВТ_Товары.Номенклатура.СчетБухгалтерскогоУчета КАК СчетБухгалтерскогоУчета
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	|				&МоментВремени,
	|				Склад.Ссылка = &Склад
	|					И Номенклатура В
	|						(ВЫБРАТЬ
	|							ВТ_Товары.Номенклатура
	|						ИЗ
	|							ВТ_Товары КАК ВТ_Товары)) КАК ТоварыНаСкладахОстатки
	|		ПО ВТ_Товары.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТоварыНаСкладахОстатки.СрокГодности
	|ИТОГИ
	|	МАКСИМУМ(КоличествоВДокументе),
	|	МАКСИМУМ(СуммаВДокументе),
	|	СУММА(КоличествоОстаток)
	|ПО
	|	Номенклатура";      
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);     
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени()));
	
	ВыборкаНоменклатура = 
	Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); 
	ЗапретПроведенияПриОтрицательныхОстатках = Константы.ЗапретПроведенияПриОтрицательныхОстатках.Получить();
	Пока ВыборкаНоменклатура.Следующий() Цикл
		Если ВыборкаНоменклатура.ЭтоТовар Тогда
			
			СтоимостьОбщая = 0;
			
			Превышение = ВыборкаНоменклатура.КоличествоВДокументе - ВыборкаНоменклатура.КоличествоОстаток;
			
			Если Превышение > 0 Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = СтрШаблон ("Превышение остатка по номенклатуре ""%1""  в количестве ""%2""", ВыборкаНоменклатура.НоменклатураПредставление, Превышение);
				
				Если ЗапретПроведенияПриОтрицательныхОстатках Тогда
					Сообщение.Текст = СтрШаблон ("В результате документа образовались отрицательные остатки по номенклатуре ""%1""  в количестве ""%2""", ВыборкаНоменклатура.НоменклатураПредставление, Превышение);
					Отказ = Истина;
				КонецЕсли;
				Сообщение.Сообщить();
			КонецЕсли;
			
			Если Отказ Тогда
				Продолжить;
			КонецЕсли;
			
			ОсталосьСписать = ВыборкаНоменклатура.КоличествоВДокументе;
			
			ВыборкаДетальные = ВыборкаНоменклатура.Выбрать();
			Пока ВыборкаДетальные.Следующий() И ОсталосьСписать > 0 Цикл
				Списываем = Мин (ВыборкаДетальные.КоличествоОстаток, ОсталосьСписать);
				
				Движение = Движения.ТоварыНаСкладах.ДобавитьРасход();
				Движение.Период = Дата;
				Движение.Номенклатура = ВыборкаДетальные.Номенклатура;
				Движение.Склад = Склад;
				Движение.СрокГодности = ВыборкаДетальные.СрокГодности;
				Движение.Количество = Списываем;
				
				Если Списываем = ВыборкаДетальные.КоличествоОстаток Тогда
					Движение.Сумма = ВыборкаДетальные.СуммаОстаток;
				Иначе
					Движение.Сумма = Списываем / ВыборкаДетальные.КоличествоОстаток * ВыборкаДетальные.СуммаОстаток;
				КонецЕсли;
				
				ОсталосьСписать = ОсталосьСписать - Списываем;
				СтоимостьОбщая = СтоимостьОбщая + Движение.Сумма;  
				
				//Проводка по списанию товаров и материалов Дт90 Кт10/41
				Движение = Движения.Хозрасчетный.Добавить();
				Движение.СчетДт = ПланыСчетов.Хозрасчетный.Продажи;
				Движение.СчетКт = ВыборкаНоменклатура.СчетБухгалтерскогоУчета;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура] = ВыборкаДетальные.Номенклатура; 
				Движение.Период = Дата;    
				Движение.Сумма = СуммаДокумента;
				Движение.Содержание = "Списана себестоимость товарно-материальных ценностей"; 
			КонецЦикла;
			
			Движение = Движения.УчетЗатрат.Добавить();
			Движение.Период = Дата;
			Движение.СтатьяЗатрат = ВыборкаНоменклатура.СтатьяЗатрат;
			Движение.Сумма = СтоимостьОбщая;
			
		Иначе
			Движение = Движения.ЗаказыКлиентов.Добавить(); 
			Движение.Номенклатура = ВыборкаНоменклатура.Номенклатура; 
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Клиент = Клиент;
			Движение.ЗаказКлиента = ДокументОснование;
			Движение.ДатаЗаписи = Дата;    
			Движение.Сумма = ВыборкаНоменклатура.СуммаВДокументе;
		КонецЕсли;
		
		Движение = Движения.Продажи.Добавить();
		Движение.Период = Дата;
		Движение.Номенклатура = ВыборкаНоменклатура.Номенклатура;
		Движение.Сотрудник = Сотрудник;
		Движение.Клиент = Клиент;
		Движение.Сумма = ВыборкаНоменклатура.СуммаВДокументе;
		Движение.Количество = ВыборкаНоменклатура.КоличествоВДокументе;	
	КонецЦикла;       
	
	//Проводка по отражению выручки Дт62 Кт90	
	Движение = Движения.Хозрасчетный.Добавить();
	Движение.СчетДт = ПланыСчетов.Хозрасчетный.РасчетыСПокупателями;
	Движение.СчетКт = ПланыСчетов.Хозрасчетный.Продажи;
	БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетДт, Движение.СубконтоДт, Клиент);
	Движение.Период = Дата;
	Движение.Сумма = СуммаДокумента;
	Движение.Содержание = "Отражена выручка от реализации товаров и услуг"; 
	
	Движения.ЗаказыКлиентов.БлокироватьДляИзменения = Истина;
	Движения.ЗаказыКлиентов.Записать();
	
	//Проверка на наличие отрицательных остатков после записи движений
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗаказыКлиентовОстатки.СуммаОстаток КАК СуммаОстаток,
	|	ЗаказыКлиентовОстатки.Клиент КАК Клиент,
	|	ЗаказыКлиентовОстатки.Клиент.Представление КАК КлиентПредставление,
	|	ЗаказыКлиентовОстатки.Номенклатура КАК Номенклатура,
	|	ЗаказыКлиентовОстатки.Номенклатура.Представление КАК НоменклатураПредставление
	|ИЗ
	|	РегистрНакопления.ЗаказыКлиентов.Остатки(
	|			&МоментВремени,
	|			Клиент = &Клиент
	|				И ЗаказКлиента = &ДокументОснование
	|				И Номенклатура В
	|					(ВЫБРАТЬ
	|						ВТ_Товары.Номенклатура
	|					ИЗ
	|						ВТ_Товары КАК ВТ_Товары
	|					ГДЕ
	|						ВТ_Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга))) КАК ЗаказыКлиентовОстатки
	|ГДЕ
	|	ЗаказыКлиентовОстатки.СуммаОстаток < 0";
	
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени()));
	Запрос.УстановитьПараметр("Клиент", Клиент);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		Отказ = Истина;
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтрШаблон("Услуга ""%1"" для клиента ""%2"" уже была обработана или не была найдена такая запись!", Выборка.НоменклатураПредставление, Выборка.КлиентПредставление);
			Сообщение.Сообщить();
		КонецЦикла;
	КонецЕсли;
	
	Если ДокументОснование.Пустая() Тогда
		Движения.ЗаказыКлиентов.Записывать = Ложь;
	Иначе
		Движения.ЗаказыКлиентов.Записывать = Истина;
	КонецЕсли;	
КонецПроцедуры
#КонецОбласти


